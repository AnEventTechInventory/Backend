name: Deploy to Remote Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Code
        uses: actions/checkout@v2  # Update to the latest version

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16  # Use the version you need

      - name: Copy install.sh
        run: |
          # Copy the install.sh script to the project directory
          cp install.sh myapp/

      - name: Build Software for arm64
        env:
          GOARCH: arm64
          GOARM: 7  # Change to the appropriate ARM version if needed
        run: |
          # Build your Go project for arm64
          go build -o myapp

      - name: Create ZIP Artifact
        run: |
          # Create a ZIP file from the build output, including the install.sh script
          zip -r backend.zip myapp

      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: software-package
          path: ./backend.zip

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.DEPLOY_SERVER }} >> ~/.ssh/known_hosts

      - name: Deploy to Remote
        run: |
          # Copy the ZIP artifact to the remote server
          scp -i ~/.ssh/id_rsa ./backend.zip user@${{ secrets.DEPLOY_SERVER }}:~/backend

          # SSH into the remote server and extract the ZIP file
          ssh -i ~/.ssh/id_rsa user@${{ secrets.DEPLOY_SERVER }} "cd ~/backend && unzip -o backend.zip && ./install.sh"
