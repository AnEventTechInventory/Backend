name: Deploy to Remote Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Check Out Code
        uses: actions/checkout@v4.1.1

      - name: Cache Go Modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: go-modules-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: go-modules-${{ runner.os }}-

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.3  # Use the version you need

      - name: Build Software for arm64
        env:
          GOARCH: arm64
          GOARM: 7
        run: |
          # export GIN_MODE=release # set the mode of gin to release
          go build -o myapp

      - name: Build Docker Image
        run: |
          docker build -t myapp-image:latest .

      - name: Save Docker Image as Tarball
        run: |
          docker save -o myapp-image.tar myapp-image:latest

      - name: Set up SSH
        run: |
          # create a directory and copy the private key into it
          mkdir -p ~/.ssh
          # write the private key used to SSH into the remote server to a file
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          # make sure only the current user can read the private key
          chmod 600 ~/.ssh/id_rsa
          # add the remote server to the list of known hosts
          ssh-keyscan ${{ secrets.DEPLOY_SERVER }} >> ~/.ssh/known_hosts

      - name: Create Build Artifact
        run: |
          # Create a new build artifact, for example, a ZIP file
          # Replace this with the appropriate command for your artifact
          zip -r build-artifact.zip myapp myapp-image.tar docker-compose.yml
        working-directory: ${{ github.workspace }}

      - name: Upload Build Artifact to Remote Server
        run: |
          # Use scp to upload the build artifact to the remote server
          scp build-artifact.zip 12xx12@${{ secrets.DEPLOY_SERVER }}:~/build-artifact.zip
        working-directory: ${{ github.workspace }}

      - name: SSH into Remote Server and Deploy
        run: |
          # SSH into the remote server
          ssh -i ~/.ssh/id_rsa 12xx12@${{ secrets.DEPLOY_SERVER }} << EOF
            # Create a directory for the deployment
            mkdir -p ~/deploy

            # Unzip the build artifact
            unzip -q -o ~/build-artifact.zip -d ~/deploy

            # Navigate to the deployment directory
            cd ~/deploy

            # Start the Docker Compose stack
            docker-compose up -d
          EOF
        working-directory: ${{ github.workspace }}
