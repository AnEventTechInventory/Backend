name: Deploy to Remote Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Code
        uses: actions/checkout@v4.1.1

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.3  # Use the version you need

      - name: Build Software for arm64
        env:
          GOARCH: arm64
          GOARM: 7
        run: |
          export GIN_MODE=release # set the mode of gin to release
          go build -o myapp

      - name: Create Dockerfile
        run: |
          cat <<EOF > Dockerfile
          FROM alpine:latest
          WORKDIR /app
          COPY myapp /app/
          EXPOSE 5678
          CMD ["/app/myapp"]
          EOF
        shell: bash

      - name: Build Docker Image
        run: |
          docker build -t myapp-image .

      - name: Save Docker Image as Tarball
        run: |
          docker save -o myapp-image.tar myapp-image

      - name: Set up SSH
        run: |
          # create a directory and copy the private key into it
          mkdir -p ~/.ssh
          # write the private key used to SSH into the remote server to a file
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          # make sure only the current user can read the private key
          chmod 600 ~/.ssh/id_rsa
          # add the remote server to the list of known hosts
          ssh-keyscan ${{ secrets.DEPLOY_SERVER }} >> ~/.ssh/known_hosts
          
      - name: Upload Docker Image to Remote Server
        run: |
          scp myapp-image.tar 12xx12@${{ secrets.DEPLOY_SERVER }}:~/myapp-image.tar
          

      - name: Deploy on Remote Server
        run: |
          # SSH into the remote server and remove the old container if it exists
          ssh -i ~/.ssh/id_rsa 12xx12@${{ secrets.DEPLOY_SERVER }} "docker rm -f myapp-container || true"

          # SSH into the remote server and load the Docker image
          ssh -i ~/.ssh/id_rsa 12xx12@${{ secrets.DEPLOY_SERVER }} "docker load -i ~/myapp-image.tar"

          # Run the Docker container with the new image on the remote server
          ssh -i ~/.ssh/id_rsa 12xx12@${{ secrets.DEPLOY_SERVER }} "docker run -d -p 5678:5678 -v ./data:/app/data --name myapp-container myapp-image"



